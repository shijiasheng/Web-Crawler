<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tongji.mapper.ReviewMapper">
  <resultMap id="BaseResultMap" type="com.tongji.model.Review">
    <id column="review_id" jdbcType="INTEGER" property="reviewId" />
    <result column="product_id" jdbcType="VARCHAR" property="productId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="profile_name" jdbcType="VARCHAR" property="profileName" />
    <result column="helpfulness" jdbcType="VARCHAR" property="helpfulness" />
    <result column="score" jdbcType="VARCHAR" property="score" />
    <result column="time" jdbcType="VARCHAR" property="time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.tongji.model.Review">
    <result column="summary" jdbcType="LONGVARCHAR" property="summary" />
    <result column="text" jdbcType="LONGVARCHAR" property="text" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    review_id, product_id, user_id, profile_name, helpfulness, score, time
  </sql>
  <sql id="Blob_Column_List">
    summary, text
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.tongji.model.ReviewExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.tongji.model.ReviewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from review
    where review_id = #{reviewId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from review
    where review_id = #{reviewId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tongji.model.ReviewExample">
    delete from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tongji.model.Review">
    insert into review (review_id, product_id, user_id, 
      profile_name, helpfulness, score, 
      time, summary, text
      )
    values (#{reviewId,jdbcType=INTEGER}, #{productId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{profileName,jdbcType=VARCHAR}, #{helpfulness,jdbcType=VARCHAR}, #{score,jdbcType=VARCHAR}, 
      #{time,jdbcType=VARCHAR}, #{summary,jdbcType=LONGVARCHAR}, #{text,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tongji.model.Review">
    insert into review
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="reviewId != null">
        review_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="profileName != null">
        profile_name,
      </if>
      <if test="helpfulness != null">
        helpfulness,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="text != null">
        text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="reviewId != null">
        #{reviewId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="profileName != null">
        #{profileName,jdbcType=VARCHAR},
      </if>
      <if test="helpfulness != null">
        #{helpfulness,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="text != null">
        #{text,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tongji.model.ReviewExample" resultType="java.lang.Long">
    select count(*) from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update review
    <set>
      <if test="record.reviewId != null">
        review_id = #{record.reviewId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.profileName != null">
        profile_name = #{record.profileName,jdbcType=VARCHAR},
      </if>
      <if test="record.helpfulness != null">
        helpfulness = #{record.helpfulness,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.text != null">
        text = #{record.text,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update review
    set review_id = #{record.reviewId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      profile_name = #{record.profileName,jdbcType=VARCHAR},
      helpfulness = #{record.helpfulness,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=VARCHAR},
      summary = #{record.summary,jdbcType=LONGVARCHAR},
      text = #{record.text,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update review
    set review_id = #{record.reviewId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      profile_name = #{record.profileName,jdbcType=VARCHAR},
      helpfulness = #{record.helpfulness,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tongji.model.Review">
    update review
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="profileName != null">
        profile_name = #{profileName,jdbcType=VARCHAR},
      </if>
      <if test="helpfulness != null">
        helpfulness = #{helpfulness,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="text != null">
        text = #{text,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where review_id = #{reviewId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tongji.model.Review">
    update review
    set product_id = #{productId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      profile_name = #{profileName,jdbcType=VARCHAR},
      helpfulness = #{helpfulness,jdbcType=VARCHAR},
      score = #{score,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=LONGVARCHAR},
      text = #{text,jdbcType=LONGVARCHAR}
    where review_id = #{reviewId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tongji.model.Review">
    update review
    set product_id = #{productId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      profile_name = #{profileName,jdbcType=VARCHAR},
      helpfulness = #{helpfulness,jdbcType=VARCHAR},
      score = #{score,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR}
    where review_id = #{reviewId,jdbcType=INTEGER}
  </update>
</mapper>